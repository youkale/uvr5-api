version: '3.8'

services:
  # Zookeeper for Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    hostname: zookeeper
    container_name: uvr-zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-logs:/var/lib/zookeeper/log

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    hostname: kafka
    container_name: uvr-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    volumes:
      - kafka-data:/var/lib/kafka/data

  # UVR API Server
  api:
    build: .
    container_name: uvr-api
    depends_on:
      - kafka
    ports:
      - "${API_PORT:-8000}:8000"
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - KAFKA_TASK_TOPIC=${KAFKA_TASK_TOPIC:-uvr_tasks}
      - KAFKA_RESULT_TOPIC=${KAFKA_RESULT_TOPIC:-uvr_results}
      - KAFKA_GROUP_ID=${KAFKA_GROUP_ID:-uvr_processor}
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - BASIC_AUTH_USERNAME=${BASIC_AUTH_USERNAME:-admin}
      - BASIC_AUTH_PASSWORD=${BASIC_AUTH_PASSWORD:-password}
      - MODEL_NAME=${MODEL_NAME:-UVR-MDX-NET-Inst_HQ_4}
      - TEMP_DIR=/app/temp
      - OUTPUT_DIR=/app/output
    volumes:
      - ./temp:/app/temp
      - ./output:/app/output
    command: ["python", "app.py"]

  # Audio Processor
  processor:
    build: .
    container_name: uvr-processor
    depends_on:
      - kafka
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - KAFKA_TASK_TOPIC=${KAFKA_TASK_TOPIC:-uvr_tasks}
      - KAFKA_RESULT_TOPIC=${KAFKA_RESULT_TOPIC:-uvr_results}
      - KAFKA_GROUP_ID=${KAFKA_GROUP_ID:-uvr_processor}
      - MODEL_NAME=${MODEL_NAME:-UVR-MDX-NET-Inst_HQ_4}
      - MODEL_FILE_DIR=/app/models
      - TEMP_DIR=/app/temp
      - OUTPUT_DIR=/app/output
    volumes:
      - ./models:/app/models
      - ./temp:/app/temp
      - ./output:/app/output
    command: ["python", "processor.py"]

  # S3 Uploader
  uploader:
    build: .
    container_name: uvr-uploader
    depends_on:
      - kafka
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - KAFKA_RESULT_TOPIC=${KAFKA_RESULT_TOPIC:-uvr_results}
      - KAFKA_GROUP_ID=${KAFKA_GROUP_ID:-uvr_processor}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION:-auto}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - S3_ENDPOINT_URL=${S3_ENDPOINT_URL}
      - S3_PUBLIC_DOMAIN=${S3_PUBLIC_DOMAIN}
      - TEMP_DIR=/app/temp
      - OUTPUT_DIR=/app/output
    volumes:
      - ./output:/app/output
    command: ["python", "uploader.py"]

volumes:
  zookeeper-data:
  zookeeper-logs:
  kafka-data:
