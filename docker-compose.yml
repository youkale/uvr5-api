version: '3.8'

services:
  # Redis for priority queue
  redis:
    image: redis:7-alpine
    hostname: redis
    container_name: uvr-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # UVR API Server
  api:
    build: .
    container_name: uvr-api
    depends_on:
      redis:
        condition: service_healthy
    ports:
      - "${API_PORT:-8000}:8000"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=${REDIS_DB:-0}
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - REDIS_TASK_QUEUE=${REDIS_TASK_QUEUE:-uvr_tasks}
      - REDIS_RESULT_QUEUE=${REDIS_RESULT_QUEUE:-uvr_results}
      - DEFAULT_PRIORITY=${DEFAULT_PRIORITY:-3}
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - BASIC_AUTH_USERNAME=${BASIC_AUTH_USERNAME:-admin}
      - BASIC_AUTH_PASSWORD=${BASIC_AUTH_PASSWORD:-password}
      - MODEL_NAME=${MODEL_NAME:-UVR-MDX-NET-Inst_HQ_4}
      - TEMP_DIR=/app/temp
      - OUTPUT_DIR=/app/output
    volumes:
      - ./temp:/app/temp
      - ./output:/app/output
    command: ["python", "app.py"]

  # Audio Processor
  processor:
    build: .
    container_name: uvr-processor
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=${REDIS_DB:-0}
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - REDIS_TASK_QUEUE=${REDIS_TASK_QUEUE:-uvr_tasks}
      - REDIS_RESULT_QUEUE=${REDIS_RESULT_QUEUE:-uvr_results}
      - DEFAULT_PRIORITY=${DEFAULT_PRIORITY:-3}
      - MODEL_NAME=${MODEL_NAME:-UVR-MDX-NET-Inst_HQ_4}
      - MODEL_FILE_DIR=/app/models
      - TEMP_DIR=/app/temp
      - OUTPUT_DIR=/app/output
    volumes:
      - ./models:/app/models
      - ./temp:/app/temp
      - ./output:/app/output
    command: ["python", "processor.py"]

  # S3 Uploader
  uploader:
    build: .
    container_name: uvr-uploader
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=${REDIS_DB:-0}
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - REDIS_TASK_QUEUE=${REDIS_TASK_QUEUE:-uvr_tasks}
      - REDIS_RESULT_QUEUE=${REDIS_RESULT_QUEUE:-uvr_results}
      - DEFAULT_PRIORITY=${DEFAULT_PRIORITY:-3}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION:-auto}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - S3_ENDPOINT_URL=${S3_ENDPOINT_URL}
      - S3_PUBLIC_DOMAIN=${S3_PUBLIC_DOMAIN}
      - TEMP_DIR=/app/temp
      - OUTPUT_DIR=/app/output
    volumes:
      - ./output:/app/output
    command: ["python", "uploader.py"]

volumes:
  redis-data:
